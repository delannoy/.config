#!/usr/bin/env bash

if [[ -n "${BASH}" ]] && [[ $- == *i* ]]; # [Exit if shell is not running BASH or is non-interactive](https://askubuntu.com/a/1070182)
    then (( "${_VERBOSE}" >= 1 )) && printf '%s\n' "***$(realpath "${BASH_SOURCE[0]}")***"; # [Reliable way for a Bash script to get the full path to itself [duplicate]](https://stackoverflow.com/a/11114547)
    else return;
fi

_source(){
    [[ -f "$1" ]] && source "$1";
    [[ -d "$1" ]] && find "$1/" -type f -not -name '.*' -print0 | xargs --max-args=1 source;
}

_hostConfig(){
    local hostName
    hostName="$(hostname --long 2>/dev/null || echo "${HOSTNAME}")" # hostName=$(hostname; hostname --domain; hostname --all-fqdns; hostname --alias)
    [[ "${HOSTSLOCAL[*]}" =~ ${hostName} ]] && _source "${XDG_CONFIG_HOME}/private/bash/local"
    [[ "${HOSTSREMOTE[*]}" =~ ${hostName} ]] && _source "${XDG_CONFIG_HOME}/private/bash/remote"
    [[ "${hostName}" =~ '.cern.ch'$ ]] && _source "${XDG_CONFIG_HOME}/bash/functions/cern"
    [[ "${hostName}" =~ '.fnal.gov'$ ]] && _source "${XDG_CONFIG_HOME}/bash/functions/fnal"
    [[ "${hostName}" =~ '.cms'$ ]] && _source "${XDG_CONFIG_HOME}/bash/functions/cms"
}

_textFormatting(){
    # [How can I print text in various colors?](https://mywiki.wooledge.org/BashFAQ/037)
    # [Terminal codes (ANSI/VT100) introduction](https://wiki.bash-hackers.org/scripting/terminalcodes)
    # [tput](https://linuxcommand.org/lc3_adv_tput.php#text-effects)
    # [terminfo](https://invisible-island.net/xterm/terminfo-contents.html)
    declare -A attr=(['reset']='sgr0' ['bold']='bold' ['dim']='dim' ['italic']='sitm' ['underline']='smul' ['blink']='blink' ['invert']='rev' ['hide']='invis' ['strikethrough']='smxx');
    declare -A attrAlias=(['reset']='clear' ['bold']='bright' ['dim']='faint' ['italic']='italics' ['underline']='uline' ['blink']='flicker' ['invert']='reverse' ['hide']='invisible' ['strikethrough']='strikeout');
    declare -a fg=(black red green yellow blue magenta cyan white BLACK RED GREEN YELLOW BLUE MAGENTA CYAN WHITE);
    declare -a bg; for key in "${fg[@]}"; do bg+=("${key}BG"); done
    local key;
    for key in "${!attr[@]}"; do TXT[${key}]="$(tput ${attr[${key}]})"; done
    for key in "${!attrAlias[@]}"; do TXT[${attrAlias[${key}]}]="${TXT[${key}]}"; done
    for ((key=0; key<=${#fg[@]}-1; key++)); do TXT["${fg[${key}]}"]="$(tput setaf ${key})"; done
    for ((key=0; key<=${#bg[@]}-1; key++)); do TXT["${bg[${key}]}"]="$(tput setab ${key})"; done
}

testColor(){
    # [256-xterm-24bit-rgb-color-chart](http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html)
    msgcat --color=test # [The environment variable TERM](https://www.gnu.org/software/gettext/manual/html_node/The-TERM-variable.html#The-TERM-variable)
    for bg in {0..15}; do printf "$(tput setab $bg)%*s$(tput sgr0)" "$(tput cols)"; done
    for fg in {0..15}; do for bg in {0..15}; do printf "$(tput setaf $fg)$(tput setab $bg)%s%02d %s%02d$(tput sgr0) " 'fg' "$fg" 'bg' "$bg"; done; echo; done
    local colors=(black red green yellow blue magenta cyan white); for fg in "${colors[@]}"; do for bg in "${colors[@]}"; do printf "$(git config --get-color '' "${fg} ${bg}")%8s%8s$(git config --get-color '' 'reset') " "${fg}" "${bg}"; done; echo; done # [https://git-scm.com/docs/git-config#Documentation/git-config.txt-color]
}

# [before BASH 4.2](https://wiki.bash-hackers.org/scripting/bashchanges#other_builtins_and_keywords), [associative array must be declared outside function in order to be global](https://stackoverflow.com/a/10806853/13019084)
declare -A TXT # [https://wiki.bash-hackers.org/commands/builtin/declare] [https://wiki.bash-hackers.org/syntax/arrays]
_textFormatting

_source "${XDG_CONFIG_HOME}/bash/shellOptions"
_source "${XDG_CONFIG_HOME}/bash/functions/meta"
_source "${XDG_CONFIG_HOME}/bash/functions/functions"
_source "${XDG_CONFIG_HOME}/private/bash/functions/functions"
_source "${XDG_CONFIG_HOME}/bash/aliases/aliases"
_source "${XDG_CONFIG_HOME}/bash/prompt/prompt"
_hostConfig
